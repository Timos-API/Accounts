name: CICD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
      - staging
      - develop
  pull_request:
    branches:
      - master
      - staging
      - develop

jobs:
  # The "deploy" workflow
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: rlespinasse/github-slug-action@v3.x
      - name: Output
        run: |
          echo "Partial variables"
          echo "   repository owner    : ${{ env.GITHUB_REPOSITORY_OWNER_PART }}"
          echo "   test                : ${{ github }}"
          echo "   repository name     : ${{ env.GITHUB_REPOSITORY_NAME_PART }}"
          echo "Slug variables"
          echo "   repository          : ${{ env.GITHUB_REPOSITORY_SLUG }}"
          echo "   repository owner    : ${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}"
          echo "   repository name     : ${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}"
          echo "   ref                 : ${{ env.GITHUB_REF_SLUG }}"
          echo "   head ref            : ${{ env.GITHUB_HEAD_REF_SLUG }}"
          echo "   base ref            : ${{ env.GITHUB_BASE_REF_SLUG }}"
          echo "   event ref           : ${{ env.GITHUB_EVENT_REF_SLUG }}"
          echo "Slug URL variables"
          echo "   repository          : ${{ env.GITHUB_REPOSITORY_SLUG_URL }}"
          echo "   repository owner    : ${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG_URL }}"
          echo "   repository name     : ${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG_URL }}"
          echo "   ref                 : ${{ env.GITHUB_REF_SLUG_URL }}"
          echo "   head ref            : ${{ env.GITHUB_HEAD_REF_SLUG_URL }}"
          echo "   base ref            : ${{ env.GITHUB_BASE_REF_SLUG_URL }}"
          echo "   event ref           : ${{ env.GITHUB_EVENT_REF_SLUG_URL }}"
          echo "Short SHA variables"
          echo "   sha                 : ${{ env.GITHUB_SHA_SHORT }}"
          echo "   pull request sha    : ${{ env.GITHUB_EVENT_PULL_REQUEST_HEAD_SHA_SHORT }}"

      # Login to Docker Hub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PW }}

      # Deploy to Docker registry
      - name: Deploy to Docker registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: timoscheuermann/${{ github.repository }}:${{ github.sha }}, timoscheuermann/${{ github.repository }}:latest

  update:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: SSH and Update Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: api.timos.design
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PW }}
          script: |
            cd /root/${{ github.repository }}
            # docker-compose pull
            # docker-compose up -d --remove-orphans
